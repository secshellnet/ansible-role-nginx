---
- name: "Make sure ipv6_addr exists in vhost"
  ansible.builtin.set_fact:
    new_vhost: "{{ {'ipv6_addr': '::'} | combine(vhost) }}"

- name: "Add the ipv6 address {{ vhost.ipv6_addr }} for {{ vhost.domain }}"
  ansible.builtin.include_tasks: add_ipv6_address.yaml
  when:
    - "new_vhost.ipv6_addr != '::'"
    - "new_vhost.ipv6_addr not in ansible_facts['all_ipv6_addresses']"

- name: "Determine nginx user"
  block:
    - name: "Read nginx.conf"
      ansible.builtin.slurp:
        path: /etc/nginx/nginx.conf
      register: nginx_conf_content

    - name: "Extract Nginx user"
      ansible.builtin.set_fact:
        nginx_user: "{{ nginx_conf_content.content | b64decode | regex_search('^user (.+);', '\\1') | first }}"

- name: "Create nginx vhost for {{ new_vhost.domain }}"
  ansible.builtin.template:
    src: "vhost.conf.j2"
    dest: "/etc/nginx/{{ (ansible_distribution in ['Ubuntu', 'Debian']) | ternary('sites-available/' + vhost.domain, 'conf.d/' + vhost.domain + '.conf') }}"
    mode: "0644"
    owner: "{{ nginx_user }}"
    group: "{{ nginx_user }}"
  notify:
    - "Reload nginx"
  become: true

- name: "Ensure /etc/nginx/.htpasswd/ directory exists"
  ansible.builtin.file:
    path: "/etc/nginx/.htpasswd/"
    state: directory
    mode: "0750"
    owner: "{{ nginx_user }}"
    group: "{{ nginx_user }}"
  when:
    - "new_vhost.auth_basic is defined"
    - "new_vhost.auth_basic is not none"
  become: true

- name: "Ensure passlib is installed"
  ansible.builtin.package:
    name: python3-passlib
  become: true

- name: "Add a user to a password file and ensure permissions are set"
  community.general.htpasswd:
    path: "/etc/nginx/.htpasswd/{{ new_vhost.domain }}"
    name: "{{ item.username }}"
    password: "{{ item.password }}"
    owner: "{{ nginx_user }}"
    group: "{{ nginx_user }}"
    mode: "0640"
  loop: "{{ new_vhost.auth_basic.data }}"
  when:
    - "new_vhost.auth_basic is defined"
    - "new_vhost.auth_basic is not none"
  become: true

- name: "Enable nginx vhost {{ new_vhost.domain }}"
  ansible.builtin.file:
    src: "/etc/nginx/sites-available/{{ new_vhost.domain }}"
    dest: "/etc/nginx/sites-enabled/{{ new_vhost.domain }}"
    state: link
  when: "ansible_distribution in ['Ubuntu', 'Debian']"
  become: true

- name: "Test nginx configuration"
  ansible.builtin.command: nginx -t
  become: true
  notify: 
    - "Reload nginx"
  changed_when: false
